apply plugin: rootProject.ext.plugins.application
import com.android.build.OutputFile

project.ext.react = [
        entryFile: "index.js"
]

apply from: "../../node_modules/react-native/react.gradle"

def enableSeparateBuildPerCPUArchitecture = false


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        multiDexEnabled true
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    dexOptions {
        jumboMode true
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    signingConfigs {
        release {
            storeFile file('/Users/zhanglei/WebstormProjects/crm_app2/android/app/jure.keystore')
            //绝对路径
            storePassword "jure123456"
            keyAlias "key0"
            keyPassword "jure123456"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a": 1, "x86": 2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile project(':react-native-autoheight-webview')
    compile project(':react-native-vector-icons')
    compile project(':react-native-svg')
    compile project(':react-native-image-picker')
    compile project(path: ':commonlib')

    compile rootProject.ext.dependencies.support
    // From node_modules
    compile(rootProject.ext.dependencies.rn) {
        exclude group: 'com.android.support'
    }
    compile rootProject.ext.dependencies.gson
    compile rootProject.ext.dependencies.eventbus
    compile rootProject.ext.dependencies.zxing
    compile(rootProject.ext.dependencies.qiyu) {
        exclude group: 'com.android.support'
    }
    compile rootProject.ext.dependencies.wechat
    compile rootProject.ext.dependencies.multidex
    compile rootProject.ext.dependencies.uapp
    compile rootProject.ext.dependencies.ucommon

    implementation files('lib/alipaySdk-20180601.jar')
    implementation files('lib/umeng-share-core-6.9.3.jar')
    implementation files('lib/umeng-sharetool-6.9.3.jar')
    implementation files('lib/umeng-share-wechat-simplify-6.9.3.jar')
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}