apply plugin: rootProject.ext.plugins.application
//添加 com.sensorsdata.analytics.android 插件
apply plugin: 'com.sensorsdata.analytics.android'

project.ext.react = [
        entryFile: "index.js"
]

apply from: "../../node_modules/react-native/react.gradle"

def enableSeparateBuildPerCPUArchitecture = false

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        multiDexEnabled true
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        javaCompileOptions {
            annotationProcessorOptions { includeCompileClasspath = true }
        }
    }
    dexOptions {
        jumboMode true
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'GoogleAppIndexingWarning'
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    signingConfigs {
        release {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file(STORE_FILE)
            storePassword KEYSTORE_PASSWORD
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/repositories/releases"
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    debugImplementation('com.squareup.leakcanary:leakcanary-android:1.6.2') {
        exclude(module: 'support-core-utils')
    }
    releaseImplementation('com.squareup.leakcanary:leakcanary-android-no-op:1.6.2') {
        exclude(module: 'support-core-utils')
    }
    // Optional, if you use support library fragments:
    debugImplementation('com.squareup.leakcanary:leakcanary-support-fragment:1.6.2') {
        exclude(module: 'support-core-utils')
    }

    api rootProject.ext.dependencies.support
    api rootProject.ext.dependencies.eventbus
    api rootProject.ext.dependencies.zxing
    api rootProject.ext.dependencies.wechat
    api rootProject.ext.dependencies.recyclerview

    implementation(rootProject.ext.dependencies.sophix) {
        exclude(module: 'alicloud-android-utdid')
        exclude(module: 'alicloud-android-ut')
    }
    api files('libs/alipaySdk-20180601.jar')
    api project(':react-native-update')
    api project(':react-native-video')
    api project(':react-native-autoheight-webview')
    api project(':react-native-vector-icons')
    api project(':react-native-svg')
    api project(':react-native-image-picker')
    api project(':react-native-linear-gradient')
    api project(':react-native-fetch-blob')
    api project(':rn_deviceinfo')
    api project(':react-native-webview-bridge')
    api project(':@sensors.data/react-native-sensors-analytics')
    api project(':@mr/request')
    api project(':@mr/cookies')
    api project(':@mr/geolocation')
    api project(':commonlib')
    api project(':qiyu_service')
    api project(':qrcode')
    api project(':lottie')
}
